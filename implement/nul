	.file	"util_flymake_master.c"
	.text
	.globl	toupper_ex
	.type	toupper_ex, @function
toupper_ex:
.LFB2:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	%edi, %eax
	movb	%al, -4(%rbp)
	movsbl	-4(%rbp), %eax
	movl	%eax, %edi
	call	toupper
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	toupper_ex, .-toupper_ex
	.globl	char_allowed
	.type	char_allowed, @function
char_allowed:
.LFB3:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, %eax
	movq	%rsi, -32(%rbp)
	movb	%al, -20(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.L4
	movl	$0, %eax
	jmp	.L5
.L4:
	movl	$0, -4(%rbp)
	jmp	.L6
.L7:
	movsbl	-20(%rbp), %eax
	movl	%eax, %edi
	call	toupper_ex
	movl	%eax, %edx
	movl	-4(%rbp), %eax
	leal	1(%rax), %ecx
	movl	%ecx, -4(%rbp)
	movslq	%eax, %rcx
	movq	-32(%rbp), %rax
	addq	%rcx, %rax
	movzbl	(%rax), %eax
	cmpb	%al, %dl
	jne	.L6
	movl	$1, %eax
	jmp	.L5
.L6:
	movl	-4(%rbp), %eax
	movslq	%eax, %rdx
	movq	-32(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	testb	%al, %al
	jne	.L7
	movl	$0, %eax
.L5:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	char_allowed, .-char_allowed
	.section	.rodata
.LC0:
	.string	"%s"
	.align 8
.LC1:
	.string	"Ej till\303\245tet svar; godk\303\244nda tecken [%s]\n"
	.text
	.globl	ask_question_char
	.type	ask_question_char, @function
ask_question_char:
.LFB4:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movb	$0, -2(%rbp)
	jmp	.L9
.L12:
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	movl	$.LC0, %edi
	movl	$0, %eax
	call	printf
	call	getchar
	movb	%al, -1(%rbp)
	cmpb	$10, -1(%rbp)
	je	.L10
	nop
.L11:
	call	getchar
	cmpl	$10, %eax
	jne	.L11
	movsbl	-1(%rbp), %eax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rsi
	movl	%eax, %edi
	call	char_allowed
	movb	%al, -2(%rbp)
.L10:
	movzbl	-2(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L9
	movq	-32(%rbp), %rax
	movq	%rax, %rsi
	movl	$.LC1, %edi
	movl	$0, %eax
	call	printf
.L9:
	movzbl	-2(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L12
	movsbl	-1(%rbp), %eax
	movl	%eax, %edi
	call	toupper_ex
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	ask_question_char, .-ask_question_char
	.section	.rodata
.LC2:
	.string	"1234567890"
.LC3:
	.string	"Fel; ange en siffra"
	.align 8
.LC4:
	.string	"Fel; talet du angav \303\244r f\303\266r stort"
	.align 8
.LC5:
	.string	"Fel; talet \303\244r inte inom spannet %d till %d.\n"
	.align 8
.LC6:
	.string	"Ej till\303\245tet svar; godk\303\244nda tecken [0123456789]"
	.text
	.globl	ask_question_int
	.type	ask_question_int, @function
ask_question_int:
.LFB5:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movq	%rdi, -72(%rbp)
	movl	%esi, -76(%rbp)
	movl	%edx, -80(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movb	$0, -53(%rbp)
	jmp	.L15
.L27:
	movq	-72(%rbp), %rax
	movq	%rax, %rsi
	movl	$.LC0, %edi
	movl	$0, %eax
	call	printf
	movb	$0, -17(%rbp)
	movq	stdin(%rip), %rdx
	leaq	-48(%rbp), %rax
	movl	$33, %esi
	movq	%rax, %rdi
	call	fgets
	movl	$0, -52(%rbp)
	movb	$1, -53(%rbp)
	jmp	.L16
.L20:
	movl	-52(%rbp), %eax
	cltq
	movzbl	-48(%rbp,%rax), %eax
	movsbl	%al, %eax
	movl	$.LC2, %esi
	movl	%eax, %edi
	call	char_allowed
	xorl	$1, %eax
	testb	%al, %al
	je	.L17
	cmpl	$0, -52(%rbp)
	jne	.L18
	movzbl	-48(%rbp), %eax
	cmpb	$45, %al
	je	.L17
.L18:
	movb	$0, -53(%rbp)
.L17:
	addl	$1, -52(%rbp)
.L16:
	movl	-52(%rbp), %eax
	cltq
	movzbl	-48(%rbp,%rax), %eax
	testb	%al, %al
	je	.L19
	movl	-52(%rbp), %eax
	cltq
	movzbl	-48(%rbp,%rax), %eax
	cmpb	$10, %al
	jne	.L20
.L19:
	movzbl	-48(%rbp), %eax
	cmpb	$10, %al
	je	.L21
	movzbl	-48(%rbp), %eax
	cmpb	$45, %al
	jne	.L22
	movzbl	-47(%rbp), %eax
	cmpb	$10, %al
	jne	.L22
.L21:
	movl	$.LC3, %edi
	call	puts
	movb	$0, -53(%rbp)
	jmp	.L15
.L22:
	movzbl	-17(%rbp), %eax
	testb	%al, %al
	je	.L23
	movzbl	-17(%rbp), %eax
	cmpb	$10, %al
	je	.L23
	movl	$.LC4, %edi
	call	puts
	nop
.L24:
	call	getchar
	cmpl	$10, %eax
	jne	.L24
	movb	$0, -53(%rbp)
	jmp	.L15
.L23:
	cmpb	$0, -53(%rbp)
	je	.L25
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	atoi
	cmpl	-76(%rbp), %eax
	jl	.L26
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	atoi
	cmpl	-80(%rbp), %eax
	jle	.L25
.L26:
	movl	-80(%rbp), %edx
	movl	-76(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC5, %edi
	movl	$0, %eax
	call	printf
	movb	$0, -53(%rbp)
	jmp	.L15
.L25:
	movzbl	-53(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L15
	movl	$.LC6, %edi
	call	puts
.L15:
	movzbl	-53(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L27
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	atoi
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L29
	call	__stack_chk_fail
.L29:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	ask_question_int, .-ask_question_int
	.section	.rodata
.LC7:
	.string	"Fel; du m\303\245ste skriva n\303\245got"
.LC8:
	.string	"Fel; F\303\266r mycket text"
	.text
	.globl	ask_question_string
	.type	ask_question_string, @function
ask_question_string:
.LFB6:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$1408, %rsp
	movq	%rdi, -1400(%rbp)
	movq	%rsi, -1408(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movb	$0, -1377(%rbp)
	jmp	.L31
.L39:
	movq	-1400(%rbp), %rax
	movq	%rax, %rsi
	movl	$.LC0, %edi
	movl	$0, %eax
	call	printf
	movb	$0, -25(%rbp)
	movq	stdin(%rip), %rdx
	leaq	-1360(%rbp), %rax
	movl	$1337, %esi
	movq	%rax, %rdi
	call	fgets
	movl	$0, -1376(%rbp)
	movb	$1, -1377(%rbp)
	jmp	.L32
.L35:
	movl	-1376(%rbp), %eax
	cltq
	movzbl	-1360(%rbp,%rax), %eax
	movsbl	%al, %eax
	movq	-1408(%rbp), %rdx
	movq	%rdx, %rsi
	movl	%eax, %edi
	call	char_allowed
	xorl	$1, %eax
	testb	%al, %al
	je	.L33
	movb	$0, -1377(%rbp)
.L33:
	addl	$1, -1376(%rbp)
.L32:
	movl	-1376(%rbp), %eax
	cltq
	movzbl	-1360(%rbp,%rax), %eax
	testb	%al, %al
	je	.L34
	movl	-1376(%rbp), %eax
	cltq
	movzbl	-1360(%rbp,%rax), %eax
	cmpb	$10, %al
	jne	.L35
.L34:
	movzbl	-1360(%rbp), %eax
	cmpb	$10, %al
	jne	.L36
	movl	$.LC7, %edi
	call	puts
	movb	$0, -1377(%rbp)
	jmp	.L31
.L36:
	movzbl	-25(%rbp), %eax
	testb	%al, %al
	je	.L37
	movzbl	-25(%rbp), %eax
	cmpb	$10, %al
	je	.L37
	movl	$.LC8, %edi
	call	puts
	nop
.L38:
	call	getchar
	cmpl	$10, %eax
	jne	.L38
	movb	$0, -1377(%rbp)
	jmp	.L31
.L37:
	movzbl	-1377(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L31
	movq	-1408(%rbp), %rax
	movq	%rax, %rsi
	movl	$.LC1, %edi
	movl	$0, %eax
	call	printf
.L31:
	movzbl	-1377(%rbp), %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L39
	movl	$-1, -1372(%rbp)
.L40:
	addl	$1, -1372(%rbp)
	movl	-1372(%rbp), %eax
	cltq
	movzbl	-1360(%rbp,%rax), %eax
	testb	%al, %al
	jne	.L40
	movl	-1372(%rbp), %eax
	subl	$1, %eax
	cltq
	movzbl	-1360(%rbp,%rax), %eax
	cmpb	$10, %al
	jne	.L41
	movl	-1372(%rbp), %eax
	subl	$1, %eax
	cltq
	movb	$0, -1360(%rbp,%rax)
.L41:
	leaq	-1360(%rbp), %rax
	movq	%rax, %rdi
	call	strlen
	leaq	1(%rax), %rdx
	movq	our_heap(%rip), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	h_alloc_data
	movq	%rax, -1368(%rbp)
	leaq	-1360(%rbp), %rdx
	movq	-1368(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	strcpy
	movq	-1368(%rbp), %rax
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L43
	call	__stack_chk_fail
.L43:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	ask_question_string, .-ask_question_string
	.ident	"GCC: (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4"
	.section	.note.GNU-stack,"",@progbits
